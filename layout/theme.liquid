<!doctype html>
<html lang='en'>
	<head>
		<meta charset='UTF-8'>
		<title>{{ page_title }}</title>
		{{ 'application.css' | asset_url | stylesheet_tag }}
		{{ content_for_header }}
	</head>
	<body>
		{% section 'header' %}

		<header-offset class='block transition-all duration-300'>
			<main>
				{{ content_for_layout }}
			</main>
		</header-offset>
		<script>
			class MobileSlideMenu extends HTMLElement {
				connectedCallback() {
					const toggle = this.querySelector('#menu-toggle');
					const menu = this.querySelector('#mobile-menu');
					const close = this.querySelector('#menu-close');

					if (!toggle || !menu || !close) {
						console.warn('MobileSlideMenu: Missing toggle/menu/close element.');
						return;
					}

					toggle.addEventListener('click', () => {
						menu.classList.remove('translate-x-full');
						menu.classList.add('translate-x-0');
					});

					close.addEventListener('click', () => {
						menu.classList.add('translate-x-full');
						menu.classList.remove('translate-x-0');
					});
				}
			}

			customElements.define('mobile-slide-menu', MobileSlideMenu);
		</script>

		<!-- Mega Dropdown Component JS -->
		<script>
			class MegaDropdown extends HTMLElement {
				connectedCallback() {
					const button = this.querySelector('button');
					const panel = this.querySelector('#panel');
					const chevron = this.querySelector('#chevron');
					const header = document.getElementById('site-header');

					button?.addEventListener('click', (e) => {
						e.stopPropagation();

						// Dynamically calculate header height
						if (header && panel) {
							const height = header.offsetHeight;
							panel.style.top = `${height}px`;
						}

						panel.classList.toggle('hidden');
						chevron.classList.toggle('rotate-180');
					});

					document.addEventListener('click', (e) => {
						if (!this.contains(e.target)) {
							panel.classList.add('hidden');
							chevron.classList.remove('rotate-180');
						}
					});
				}
			}

			customElements.define('mega-dropdown', MegaDropdown);
		</script>
		<toast-notification>
			<div
				id='toast'
				class='hidden fixed top-4 left-1/2 transform -translate-x-1/2 z-50 w-full max-w-5xl px-4'
				style='background-color: var(--color-button); color: var(--color-button-label);'
			>
				<div
					id='toast-message'
					class='w-full px-8 py-5 rounded shadow-md text-base font-medium whitespace-nowrap'
				>
					This is a wide toast message that does not wrap.
				</div>
			</div>
		</toast-notification>

		<script src='{{ 'bundle.js' | asset_url }}' defer></script>
	</body>
</html>
